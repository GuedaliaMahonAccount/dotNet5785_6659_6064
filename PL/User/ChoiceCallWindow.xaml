<Window x:Class="PL.User.ChoiceCallWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Choice Call Window" 
        Icon="../Assets/icon.png"
        Height="450" Width="1050">

    <Window.Resources>
        <!-- Style for Buttons -->
        <Style x:Key="StyledButton" TargetType="Button">
            <Setter Property="Background" Value="#FF4CAF50" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Padding" Value="5,2" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF81C784" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF388E3C" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for DataGrid Column Headers -->
        <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#FF333333" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>

        <!-- Style for DataGrid Cells -->
        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightGray" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for DataGrid Rows -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightGray" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.Background>
            <SolidColorBrush Color="White"/>
        </Grid.Background>

        <Border Background="#FFFFFF" Margin="10" Padding="10" CornerRadius="10">
            <DataGrid x:Name="CallDataGrid"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      ItemsSource="{Binding CallList}"
                      GridLinesVisibility="None"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      EnableRowVirtualization="True"
                      ColumnHeaderStyle="{StaticResource DataGridHeaderStyle}"
                      Background="Transparent">

                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="50" />
                    <DataGridTextColumn Header="Type" Binding="{Binding CallType}" Width="120" />
                    <DataGridTextColumn Header="Address" Binding="{Binding Address}" Width="200" />
                    <DataGridTextColumn Header="Start Time" Binding="{Binding StartTime}" Width="150" />
                    <DataGridTextColumn Header="Deadline" Binding="{Binding DeadLine}" Width="150" />

                    <!-- Description Column with Button -->
                    <DataGridTemplateColumn Header="Description" Width="250">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Background="Transparent" 
                                        BorderThickness="0"
                                        Padding="0"
                                        Command="{Binding DataContext.ShowDescriptionCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}">
                                    <TextBlock Text="{Binding Description}" 
                                               TextWrapping="Wrap" 
                                               Foreground="Black"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Assign">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Assign"
                                        Style="{StaticResource StyledButton}"
                                        Command="{Binding DataContext.AssignCallCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding Id}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>
    </Grid>
</Window>
